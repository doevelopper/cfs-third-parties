stages:
    - dependencies
    - compile
    - test
    - target-package
    - target-install
    - deploy
    - target-clean

.dedicated-runner: &dedicated-runner
    retry: 1
    tags:
        - agent-smith

.default-cache: &default-cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - ${DEPS_INSTALL_DIR}

.push-cache: &push-cache
    cache:
    <<: *default-cache
    policy: push

.pull-cache: &pull-cache
    cache:
    <<: *default-cache
    policy: pull

.only_stable: &only_stable
    only:
        - master
        - /^release-.*$/

.tumbleweed: &tumbleweed
    only:
        - develop
        - /^feature-.*$/
        - /^hotfix-.*$/
        - /^bugfix-.*$/
        - /^support-.*$/
        - /^poc-.*$/

.branch_exceptions: &branch_exceptions
    only:
        - branches
    except:
        - coverity_scan

.swrs-swtp-swtr: &swrs-swtp-swtr
    allow_failure: false
    except:
        variables:
            - $CI_COMMIT_REF_NAME =~ /(^docs[\/-].*|.*-docs$)/
            - $CI_COMMIT_REF_NAME =~ /(^qa[\/-].*|.*-qa$)/

    variables:
        APPROUVAL: "DOCxxxx"

before_script:
    - date
    - cmake --version
    - make --version

after_script:
    - date

variables:
    DEPS_INSTALL_DIR: ./devslibs
#    DEPS_INSTALL_DIR: /home/gitlab-runner/$CI_COMMIT_REF_NAME

.uncrustify:
    <<: *dedicated-runner 
    stage: dependencies

    before_script:
        - date -u

    script:
        - cmake --version
        - git clone --depth=1 https://github.com/uncrustify/uncrustify.git
        - cd uncrustify
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first 
        - cmake --build build --target install
        - cd ..

    after_script:
        - date -u

    artifacts:
        name: "${CI_JOB_NAME}_${CI_COMIT_REF_NAME}_${CI_COMMIT_SHA}"
        when: always
        expire_in: 31d
        paths:
            - ${DEPS_INSTALL_DIR}

.cppcheck:
    <<: *dedicated-runner 
    stage: dependencies

    before_script:
        - date -u

    script:
        - cmake --version
        - git clone --depth=1 https://github.com/danmar/cppcheck.git
        - cd cppcheck
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first 
        - cmake --build build --target install
        - cp --recursive --verbose cfg  ${DEPS_INSTALL_DIR}/bin || true
        - cd ..

    after_script:
        - date -u

    artifacts:
        name: "${CI_JOB_NAME}_${CI_COMIT_REF_NAME}_${CI_COMMIT_SHA}"
        when: always
        expire_in: 31d
        paths:
            - ${DEPS_INSTALL_DIR}

.doxygen:
    <<: *dedicated-runner 
    stage: dependencies

    before_script:
        - date -u

    script:
        - cmake --version
        - git clone --depth=1 https://github.com/doxygen/doxygen.git 
        - cd doxygen
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first
        - cmake --build build --target install
        - cd ..

    after_script:
        - date -u

    artifacts:
        name: "${CI_JOB_NAME}_${CI_COMIT_REF_NAME}_${CI_COMMIT_SHA}"
        when: always
        expire_in: 31d
        paths:
            - ${DEPS_INSTALL_DIR}


.apache:
    <<: *dedicated-runner
    stage: dependencies

    before_script:
        - date -u

    script:
        - echo "Building Apache Runtime Library"
        - wget --quiet https://www-us.apache.org/dist/apr/apr-1.6.5.tar.gz
        - tar -xvzf apr-1.6.5.tar.gz > /dev/null
        - cd apr-1.6.5
        - ./configure --prefix=${DEPS_INSTALL_DIR} --enable-threads --enable-posix-shm 
            --enable-allocator-guard-pages --enable-pool-concurrency-check --enable-other-child
        - make clean && make && make install
        - cd ..

        - echo "Building Expat Library"
        - git clone --depth=1 https://github.com/libexpat/libexpat.git
        - cd libexpat/expat
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first
        - cmake --build build --target install
        - cd ../../

        - echo "Building Apache Runtime Utils Library"
        - wget --quiet https://www-us.apache.org/dist//apr/apr-util-1.6.1.tar.gz
        - tar -xvf apr-util-1.6.1.tar.gz > /dev/null
        - cd apr-util-1.6.1
        - ./configure --prefix=${DEPS_INSTALL_DIR} --with-apr=${DEPS_INSTALL_DIR}  --with-expat=${DEPS_INSTALL_DIR}
        - make clean && make && make install
        - cd ..

        - echo "Building Apache logging library Log4cxx"
        - git clone --depth=1 https://git-wip-us.apache.org/repos/asf/logging-log4cxx.git
        - cd logging-log4cxx
        - ./autogen.sh
        - ./configure --prefix=${DEPS_INSTALL_DIR} --with-apr=${DEPS_INSTALL_DIR} 
            --with-apr-util=${DEPS_INSTALL_DIR} --with-ODBC=no --with-SMTP=no 
            --enable-char --enable-wchar_t 
            --with-charset=utf-8 --with-logchar=utf-8
        - make clean && make && make install
        - cd ..

    after_script:
        - date -u

    artifacts:
        name: "${CI_JOB_NAME}_${CI_COMIT_REF_NAME}_${CI_COMMIT_SHA}"
        when: always
        expire_in: 31d
        paths:
            - ${DEPS_INSTALL_DIR}

google-tools:
    <<: *dedicated-runner
    stage: dependencies

    before_script:
        - date -u

    script:
        - echo "Building Google Test"
        - git clone --depth=1 --recurse-submodules https://github.com/google/googletest.git
        - cd googletest
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first
        - cmake --build build --target install
        - cd ..

        - echo "Building gogole Bench Mark"
        - git clone --depth=1 --recurse-submodules https://github.com/google/benchmark.git
        - cd benchmark
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first
        - cmake --build build --target install
        - cd ..

        - echo "Building Google crc32c Library"
        - git clone --depth=1  https://github.com/google/crc32c.git
        - cd crc32c
        - cmake -E make_directory build
        - cmake -E chdir build cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR}
        - cmake --build build --target all --clean-first
        - cmake --build build --target install
        - cd ..

        - echo "Buildinggoogle protocol buffer"
        - git clone  --recurse-submodules --depth 1 https://github.com/protocolbuffers/protobuf.git
        - cd protobuf
        - ./autogen.sh
        - ./configure --prefix=${DEPS_INSTALL_DIR}
        - make clean && make && make install
        - cd ..

    after_script:
        - date -u

    artifacts:
        name: "${CI_JOB_NAME}_${CI_COMIT_REF_NAME}_${CI_COMMIT_SHA}"
        when: always
        expire_in: 31d
        paths:
            - ${DEPS_INSTALL_DIR}
